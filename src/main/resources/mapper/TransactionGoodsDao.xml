<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jack.recycle.mapper.TransactionGoodsDao">
    <resultMap id="BaseResultMap" type="com.jack.recycle.model.TransactionGoods">
        <id column="uuid" jdbcType="VARCHAR" property="uuid" />
        <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
        <result column="weight" jdbcType="DOUBLE" property="weight" />
        <result column="money" jdbcType="DOUBLE" property="money" />
        <result column="unit" jdbcType="VARCHAR" property="unit" />
        <result column="rmb" jdbcType="DOUBLE" property="rmb" />
        <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
        <result column="is_null" jdbcType="INTEGER" property="isNull" />
    </resultMap>
    <sql id="Base_Column_List">
        uuid, transaction_id, weight, money, unit, rmb, goods_id, is_null
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from transaction_goods
        where uuid = #{uuid,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" parameterType="com.jack.recycle.model.TransactionGoods" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from transaction_goods
        where 1=1
        <if test="transactionId != null">
            and transaction_id = #{transactionId,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="selectByTransactionIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from transaction_goods
        where transaction_id in
        <foreach collection="list" item="transactionId" index="index" open="(" close=")" separator=",">
            #{transactionId}
        </foreach>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from transaction_goods
        where uuid = #{uuid,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="uuid" keyProperty="uuid" parameterType="com.jack.recycle.model.Transaction" useGeneratedKeys="true">
        insert into transaction_goods (uuid, transaction_id, weight, money, unit, rmb, goods_id, is_null)
        values (#{uuid,jdbcType=VARCHAR},#{transactionId,jdbcType=VARCHAR},#{weight,jdbcType=DOUBLE}, #{money,jdbcType=DOUBLE},#{unit,jdbcType=VARCHAR}, #{rmb,jdbcType=DOUBLE}, #{goodsId,jdbcType=VARCHAR}, #{isNull,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jack.recycle.model.Transaction">
        update transaction_goods
        <set>
            <if test="weight != null">
                weight = #{weight,jdbcType=DOUBLE},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DOUBLE},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="rmb != null">
                rmb = #{rmb,jdbcType=DOUBLE},
            </if>
            <if test="transactionId != null">
                transaction_id = #{transactionId,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=VARCHAR},
            </if>
            <if test="isNull != null">
                is_null = #{isNull,jdbcType=INTEGER}
            </if>
        </set>
        where uuid = #{uuid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jack.recycle.model.Transaction">
        update transaction_goods
        set weight = #{weight,jdbcType=DOUBLE},
            money = #{money,jdbcType=DOUBLE},
            unit = #{unit,jdbcType=VARCHAR},
            rmb = #{rmb,jdbcType=DOUBLE},
            transaction_id = #{transactionId,jdbcType=VARCHAR},
            goods_id = #{goodsId,jdbcType=VARCHAR}
            is_null = #{isNull,jdbcType=INTEGER}
        where uuid = #{uuid,jdbcType=VARCHAR}
    </update>
</mapper>