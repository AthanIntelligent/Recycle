<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jack.recycle.mapper.GoodsDao">
  <resultMap id="BaseResultMap" type="com.jack.recycle.model.Goods">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="goods_type" jdbcType="VARCHAR" property="goodsType" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="recycle_detail" jdbcType="VARCHAR" property="recycleDetail" />
    <result column="per_money" jdbcType="DOUBLE" property="perMoney" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <sql id="Base_Column_List">
    uuid, goods_type, goods_name, recycle_detail, per_money, remark, pic
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from goods
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="uuid" keyProperty="uuid" parameterType="com.jack.recycle.model.Goods" useGeneratedKeys="true">
    insert into goods (uuid,goods_type, goods_name, recycle_detail,per_money, remark, pic)
    values (#{uuid,jdbcType=VARCHAR},#{goodsType,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{recycleDetail,jdbcType=VARCHAR},
      #{perMoney,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="uuid" keyProperty="uuid" parameterType="com.jack.recycle.model.Goods" useGeneratedKeys="true">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="recycleDetail != null">
        recycle_detail,
      </if>
      <if test="perMoney != null">
        per_money,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsType != null">
        #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="recycleDetail != null">
        #{recycleDetail,jdbcType=VARCHAR},
      </if>
      <if test="perMoney != null">
        #{perMoney,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jack.recycle.model.Goods">
    update goods
    <set>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="recycleDetail != null">
        recycle_detail = #{recycleDetail,jdbcType=VARCHAR},
      </if>
      <if test="perMoney != null">
        per_money = #{perMoney,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jack.recycle.model.Goods">
    update goods
    set goods_type = #{goodsType,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      recycle_detail = #{recycleDetail,jdbcType=VARCHAR},
      per_money = #{perMoney,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>