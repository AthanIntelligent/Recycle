<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jack.recycle.mapper.StationDao">
  <resultMap id="BaseResultMap" type="com.jack.recycle.model.Station">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="jz_user_id" jdbcType="VARCHAR" property="jzUserId" />
    <result column="jz_address" jdbcType="VARCHAR" property="jzAddress" />
    <result column="jz_name" jdbcType="VARCHAR" property="jzName" />
    <result column="order_time" jdbcType="VARCHAR" property="orderTime" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    uuid, jz_user_id, jz_address, jz_name, order_time, picture, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from station
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from station
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="uuid" keyProperty="uuid" parameterType="com.jack.recycle.model.Station" useGeneratedKeys="true">
    insert into station (jz_user_id, jz_address, jz_name, 
      order_time, picture, create_time
      )
    values (#{jzUserId,jdbcType=VARCHAR}, #{jzAddress,jdbcType=VARCHAR}, #{jzName,jdbcType=VARCHAR}, 
      #{orderTime,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="uuid" keyProperty="uuid" parameterType="com.jack.recycle.model.Station" useGeneratedKeys="true">
    insert into station
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jzUserId != null">
        jz_user_id,
      </if>
      <if test="jzAddress != null">
        jz_address,
      </if>
      <if test="jzName != null">
        jz_name,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jzUserId != null">
        #{jzUserId,jdbcType=VARCHAR},
      </if>
      <if test="jzAddress != null">
        #{jzAddress,jdbcType=VARCHAR},
      </if>
      <if test="jzName != null">
        #{jzName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jack.recycle.model.Station">
    update station
    <set>
      <if test="jzUserId != null">
        jz_user_id = #{jzUserId,jdbcType=VARCHAR},
      </if>
      <if test="jzAddress != null">
        jz_address = #{jzAddress,jdbcType=VARCHAR},
      </if>
      <if test="jzName != null">
        jz_name = #{jzName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jack.recycle.model.Station">
    update station
    set jz_user_id = #{jzUserId,jdbcType=VARCHAR},
      jz_address = #{jzAddress,jdbcType=VARCHAR},
      jz_name = #{jzName,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>